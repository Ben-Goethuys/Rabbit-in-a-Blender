{# Copyright 2022 RADar-AZDelta #}
{# SPDX-License-Identifier: gpl3+ #}
MERGE INTO {{project_id}}.{{dataset_id_work}}.{{pk_swap_table_name}}_swap AS T
USING (
    WITH cte_max AS (
        SELECT IFNULL(MAX(y), 0) as y
        FROM {{project_id}}.{{dataset_id_work}}.{{pk_swap_table_name}}_swap
    ),
    swap AS (
        SELECT DISTINCT t.{{primary_key_column}} as x,
            {%- set ns = namespace(fk_counter=0, ci_counter=0) -%}
            {%- for column in concept_id_columns %}
                {%- if not column in events and not column in events.values() %}
                IFNULL(swap_ci{{ns.ci_counter}}.conceptId, 0) as {{column}},
                {%- set ns.ci_counter = ns.ci_counter + 1 -%}
                {%- else %}
                t.{{column}},
                {%- endif -%}
            {%- endfor %} 
            '{{work_table}}' as source
        FROM (
            {%- for work_table in work_tables -%}
                {%- if not loop.first %}
            UNION ALL
                {%- endif %}
            SELECT * FROM {{project_id}}.{{dataset_id_work}}.{{work_table}} 
            {%- endfor %}            
        ) t
        {%- set ns = namespace(fk_counter=0, ci_counter=0) %}    
        LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.{{pk_swap_table_name}}_swap swap on swap.x = t.{{primary_key_column}}
            {%- set ns = namespace(ci_counter=0) %}  
            {%- for column in concept_id_columns %}
                {%- if not column in events and not column in events.values() %}
        LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.{{omop_table}}__{{column.lower()}}_usagi_casted swap_ci{{ns.ci_counter}} on swap_ci{{ns.ci_counter}}.sourceCode = t.{{column}} and swap_ci{{ns.ci_counter}}.mappingStatus = 'APPROVED'
                {%- set ns.ci_counter = ns.ci_counter + 1 -%}
                {%- endif -%}
            {%- endfor %} 
        where swap.x is null
    )
    SELECT
        s.x,
        {%- for column in concept_id_columns %}
        s.{{column}},
        {%- endfor %} 
        s.source,
        ROW_NUMBER() OVER() + cte_max.y as y
    FROM swap s
    INNER JOIN cte_max on 1=1
) AS S
ON S.x = T.x
    {%- for column in concept_id_columns %}
        and S.{{column}} = T.{{column}}
    {%- endfor %} 
WHEN NOT MATCHED THEN
    INSERT ROW